/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.photoreceiver;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.xml.bind.DatatypeConverter;

import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;
import it.unibo.qactors.mqtt.MqttUtils;

public class Photoreceiver extends AbstractPhotoreceiver {
	private MqttUtils mqtt = MqttUtils.getMqttSupport(this);
	private int counter = 1;
	private String clientid = "photoReceiverBNP";
	private String brokerAddr = "tcp://test.mosquitto.org:1883";
	private String topic = "unibo/mqtt/ioRobotBNP";
	private String defaultFileName = "ioRobotPhoto";
	private String defaultImageFormat = "jpg";
	
	public Photoreceiver(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
		super(actorId, myCtx, outEnvView);
	}
	
	public void connectAndSubscribe() throws Exception {
		this.mqtt.connect(this, this.clientid, this.brokerAddr, this.topic);
		this.mqtt.subscribe(this, this.clientid, this.brokerAddr, this.topic);
	}
	
	public void saveMqttPhoto(String photo) {
		try {
			ByteArrayInputStream bis = new ByteArrayInputStream(DatatypeConverter
														.parseBase64Binary(photo));
			BufferedImage image = ImageIO.read(bis);
			bis.close();
			File outputfile = new File(this.defaultFileName + this.counter + "." + this.defaultImageFormat);
			ImageIO.write(image, this.defaultImageFormat, outputfile);
			this.counter++;
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	
}
